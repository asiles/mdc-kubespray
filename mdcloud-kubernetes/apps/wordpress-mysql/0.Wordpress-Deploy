#### PREREQUISITOS ####

Tener esta StorageClass creada:

    $ vim storage-class.yaml


    kind: StorageClass
    apiVersion: storage.k8s.io/v1
    metadata:
    name: thin-disk
    provisioner: kubernetes.io/vsphere-volume
    parameters:
        diskformat: thin

        kubectl  --kubeconfig ~/terraform-vsphere-kubespray/config/admin.conf apply -f storage-class.yaml

Tener configurado un WildCard de dns:

*.k8s.mediacloud.lab -> 10.0.1.20

#### DEPLOYMENT ####
1. Crear el Secret para el MYSQL

    kubectl  --kubeconfig ~/terraform-vsphere-kubespray/config/admin.conf create secret generic mysql-pass --from-literal=password="mediapro"

    kubectl  --kubeconfig ~/terraform-vsphere-kubespray/config/admin.conf get secrets

2. Deployar MYSQL

    kubectl --kubeconfig ~/terraform-vsphere-kubespray/config/admin.conf create -f mysql-deployment.yaml

    Comprobar que crea y monta los PVC

    kubectl --kubeconfig ~/terraform-vsphere-kubespray/config/admin.conf get pvc

3. Deployar WordPress

    kubectl --kubeconfig ~/terraform-vsphere-kubespray/config/admin.conf create -f wordpress-deployment.yaml

    Comprobar que crea y monta los PVC

    kubectl --kubeconfig ~/terraform-vsphere-kubespray/config/admin.conf get pvc

4. Configurar Ingress (para el hostname que sea) 

    kubectl --kubeconfig ~/terraform-vsphere-kubespray/config/admin.conf apply -f wordpress-ingress.yaml

#### ACCESO ####

http://wordpress.k8s.mediacloud.lab

#### BORRADO ####

    kubectl --kubeconfig ~/terraform-vsphere-kubespray/config/admin.conf delete secret mysql-pass

    kubectl --kubeconfig ~/terraform-vsphere-kubespray/config/admin.conf delete deployment -l app=wordpress
    kubectl --kubeconfig ~/terraform-vsphere-kubespray/config/admin.conf delete service -l app=wordpress

    kubectl --kubeconfig ~/terraform-vsphere-kubespray/config/admin.conf delete ingress -l app=wordpress

    kubectl --kubeconfig ~/terraform-vsphere-kubespray/config/admin.conf delete pvc -l app=wordpress